name: Test siging

on: [pull_request]

jobs:
  create-fake-files:
    runs-on: ${{ matrix.os }}

    env:
      STX_NETWORK: ${{ matrix.stx_network }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        stx_network: [testnet, mainnet]
        include:
          - os: macos-latest
            NPM_COMMAND: mac
            UPLOAD_ASSETS: release/**/*.dmg

          - os: ubuntu-latest
            NPM_COMMAND: linux
            UPLOAD_ASSETS: |
              release/**/*.deb
              release/**/*.rpm

          - os: windows-latest
            NPM_COMMAND: win
            UPLOAD_ASSETS: release/**/*.exe

    steps:
      - run: echo ${{ matrix.stx_network }}${{ matrix.os }} > ${{ matrix.stx_network }}${{ matrix.os }}.txt

      - uses: actions/upload-artifact@v2
        name: ${{ matrix.stx_network }}${{ matrix.os }}.txt
        with:
          name: ${{ matrix.stx_network }}${{ matrix.os }}
          path: ${{ matrix.stx_network }}${{ matrix.os }}.txt

  sign-assets:
    runs-on: ubuntu-latest
    needs:
      - create-fake-files
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          path: downloads

      - run: ls -R downloads

      - run: find downloads -type f -exec mv '{}' . \; && rm -rf downloads

      - run: ls | xargs -I{} shasum -a 256 {} | grep -v shasum.txt | tee -a shasum.txt

      - run: cat shasum.txt

      - name: Import GPG key
        id: import_gpg_key
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - run: gpg --armor --output shasum.txt.asc --clearsign shasum.txt

      - run: cat shasum.txt.asc
